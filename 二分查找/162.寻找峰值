/*
峰值元素是指其值严格大于左右相邻值的元素。

给你一个整数数组 nums，找到峰值元素并返回其索引。数组可能包含多个峰值，在这种情况下，返回 任何一个峰值 所在位置即可。

你可以假设 nums[-1] = nums[n] = -∞ 。

你必须实现时间复杂度为 O(log n) 的算法来解决此问题。
*/
class Solution {
    public int findPeakElement(int[] nums) {
        int n = nums.length;
        if (nums == null || nums.length < 2) {
            return 0;
        }
        // 先检查头部尾部
        if (nums[0] > nums[1]) {
            return 0;
        }
        if (nums[n - 1] > nums[n - 2]) {
            return n - 1;
        }
        // 若0<1 n-2>n-1 则1~n-2一定存在峰值
        // 用二分查找去找到
        int l = 1, r = n - 2, m, ans = -1;
        while (l <= r) {
            m = (l + r)/2;
            if (nums[m] < nums[m - 1]) {
                // 0<1 m-1>m 1~m-1一定有峰值
                r = m - 1;
            } else if (nums[m] < nums[m + 1]) {
                // m<m+1 n-2>n-1 m+1~n-2一定有峰值
                l = m + 1;
            }else{
                //m比左大比右大 m是峰值
                ans=m;
                break;
            }
        }
        return ans;
    }
}
